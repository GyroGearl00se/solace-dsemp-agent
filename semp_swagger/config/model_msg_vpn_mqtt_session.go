/*
 * SEMP (Solace Element Management Protocol)
 *
 * SEMP (starting in `v2`) is a RESTful API for configuring, monitoring, and administering a Solace PubSub+ broker. This specification defines the following API:   API|Base Path|Purpose :---|:---|:--- Configuration|/SEMP/v2/config|Reading and writing configuration    The following APIs are also available:   API|Base Path|Purpose :---|:---|:--- Action|/SEMP/v2/action|Performing actions Monitoring|/SEMP/v2/monitor|Querying operational state    For tutorials, architectural and protocol design documentation, and other information about the SEMP API, consult the [SEMP documentation](https://docs.solace.com/Admin/SEMP/Using-SEMP.htm) on the Solace website. The SEMP API specifications are also [available for download](https://solace.com/downloads/).  If you need additional support, please contact us at [support@solace.com](mailto:support@solace.com).
 *
 * API version: 2.48
 * Contact: support@solace.com
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

type MsgVpnMqttSession struct {
	// Enable or disable the MQTT Session. When disabled, the client is disconnected, new messages matching QoS 0 subscriptions are discarded, and new messages matching QoS 1 subscriptions are stored for future delivery.  The minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The minimum access scope/level required to change this attribute is \"vpn/read-write\". Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is `false`.
	Enabled **bool `json:"enabled,omitempty"`
	// The Client ID of the MQTT Session, which corresponds to the ClientId provided in the MQTT CONNECT packet.  The minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".
	MqttSessionClientId string `json:"mqttSessionClientId,omitempty"`
	// The virtual router of the MQTT Session.  The minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:  <pre> \"primary\" - The MQTT Session belongs to the primary virtual router. \"backup\" - The MQTT Session belongs to the backup virtual router. \"auto\" - The MQTT Session is automatically assigned a virtual router at creation, depending on the broker's active-standby role. </pre> 
	MqttSessionVirtualRouter string `json:"mqttSessionVirtualRouter,omitempty"`
	// The name of the Message VPN.  The minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".
	MsgVpnName string `json:"msgVpnName,omitempty"`
	// The owner of the MQTT Session. For externally-created sessions this defaults to the Client Username of the connecting client. For management-created sessions this defaults to empty.  The minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The minimum access scope/level required to change this attribute is \"vpn/read-write\". Modifying this attribute while the object (or the relevant part of the object) is administratively enabled may be service impacting as enabled will be temporarily set to false to apply the change. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is `\"\"`.
	Owner string `json:"owner,omitempty"`
	// Enable or disable the propagation of consumer acknowledgments (ACKs) received on the active replication Message VPN to the standby replication Message VPN.  The minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The minimum access scope/level required to change this attribute is \"vpn/read-write\". Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is `true`. Available since 2.14.
	QueueConsumerAckPropagationEnabled **bool `json:"queueConsumerAckPropagationEnabled,omitempty"`
	// The name of the Dead Message Queue (DMQ) used by the MQTT Session Queue.  The minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The minimum access scope/level required to change this attribute is \"vpn/read-write\". Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is `\"#DEAD_MSG_QUEUE\"`. Available since 2.14.
	QueueDeadMsgQueue string `json:"queueDeadMsgQueue,omitempty"`
	QueueEventBindCountThreshold *MsgVpnMqttSessionQueueEventBindCountThreshold `json:"queueEventBindCountThreshold,omitempty"`
	QueueEventMsgSpoolUsageThreshold *MsgVpnMqttSessionQueueEventMsgSpoolUsageThreshold `json:"queueEventMsgSpoolUsageThreshold,omitempty"`
	QueueEventRejectLowPriorityMsgLimitThreshold *MsgVpnMqttSessionQueueEventRejectLowPriorityMsgLimitThreshold `json:"queueEventRejectLowPriorityMsgLimitThreshold,omitempty"`
	// The maximum number of consumer flows that can bind to the MQTT Session Queue.  The minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The minimum access scope/level required to change this attribute is \"vpn/read-write\". Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is `1000`. Available since 2.14.
	QueueMaxBindCount int64 `json:"queueMaxBindCount,omitempty"`
	// The maximum number of messages delivered but not acknowledged per flow for the MQTT Session Queue.  The minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The minimum access scope/level required to change this attribute is \"vpn/read-write\". Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is `10000`. Available since 2.14.
	QueueMaxDeliveredUnackedMsgsPerFlow int64 `json:"queueMaxDeliveredUnackedMsgsPerFlow,omitempty"`
	// The maximum message size allowed in the MQTT Session Queue, in bytes (B).  The minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The minimum access scope/level required to change this attribute is \"vpn/read-write\". Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is `10000000`. Available since 2.14.
	QueueMaxMsgSize int32 `json:"queueMaxMsgSize,omitempty"`
	// The maximum message spool usage allowed by the MQTT Session Queue, in megabytes (MB). A value of 0 only allows spooling of the last message received and disables quota checking.  The minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The minimum access scope/level required to change this attribute is \"vpn/read-write\". Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is `5000`. Available since 2.14.
	QueueMaxMsgSpoolUsage int64 `json:"queueMaxMsgSpoolUsage,omitempty"`
	// The maximum number of times the MQTT Session Queue will attempt redelivery of a message prior to it being discarded or moved to the DMQ. A value of 0 means to retry forever.  The minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The minimum access scope/level required to change this attribute is \"vpn/read-write\". Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is `0`. Available since 2.14.
	QueueMaxRedeliveryCount int64 `json:"queueMaxRedeliveryCount,omitempty"`
	// The maximum time in seconds a message can stay in the MQTT Session Queue when `queueRespectTtlEnabled` is `\"true\"`. A message expires when the lesser of the sender assigned time-to-live (TTL) in the message and the `queueMaxTtl` configured for the MQTT Session Queue, is exceeded. A value of 0 disables expiry.  The minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The minimum access scope/level required to change this attribute is \"vpn/read-write\". Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is `0`. Available since 2.14.
	QueueMaxTtl int64 `json:"queueMaxTtl,omitempty"`
	// Enable or disable the checking of low priority messages against the `queueRejectLowPriorityMsgLimit`. This may only be enabled if `queueRejectMsgToSenderOnDiscardBehavior` does not have a value of `\"never\"`.  The minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The minimum access scope/level required to change this attribute is \"vpn/read-write\". Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is `false`. Available since 2.14.
	QueueRejectLowPriorityMsgEnabled **bool `json:"queueRejectLowPriorityMsgEnabled,omitempty"`
	// The number of messages of any priority in the MQTT Session Queue above which low priority messages are not admitted but higher priority messages are allowed.  The minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The minimum access scope/level required to change this attribute is \"vpn/read-write\". Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is `0`. Available since 2.14.
	QueueRejectLowPriorityMsgLimit int64 `json:"queueRejectLowPriorityMsgLimit,omitempty"`
	// Determines when to return negative acknowledgments (NACKs) to sending clients on message discards. Note that NACKs cause the message to not be delivered to any destination and Transacted Session commits to fail.  The minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The minimum access scope/level required to change this attribute is \"vpn/read-write\". Modifying this attribute while the object (or the relevant part of the object) is administratively enabled may be service impacting as queueRejectLowPriorityMsgEnabled will be temporarily set to false to apply the change. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is `\"when-queue-enabled\"`. The allowed values and their meaning are:  <pre> \"never\" - Silently discard messages. \"when-queue-enabled\" - NACK each message discard back to the client, except messages that are discarded because an endpoint is administratively disabled. \"always\" - NACK each message discard back to the client, including messages that are discarded because an endpoint is administratively disabled. </pre>  Available since 2.14.
	QueueRejectMsgToSenderOnDiscardBehavior string `json:"queueRejectMsgToSenderOnDiscardBehavior,omitempty"`
	// Enable or disable the respecting of the time-to-live (TTL) for messages in the MQTT Session Queue. When enabled, expired messages are discarded or moved to the DMQ.  The minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The minimum access scope/level required to change this attribute is \"vpn/read-write\". Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is `false`. Available since 2.14.
	QueueRespectTtlEnabled **bool `json:"queueRespectTtlEnabled,omitempty"`
}
